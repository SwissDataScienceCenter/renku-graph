# Default values for renku-graph.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

tokenRepository:
  image:
    repository: renku/token-repository
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9003
  resources:
    limits:
      memory: 250Mi
  jvmXmx: 100m
  connectionPool: 2
  tokenEncryption:
    ## A secret for signing access tokens stored in the database
    ## Generated using: `openssl rand -hex 8|base64`
    secret:

triplesGenerator:
  image:
    repository: renku/triples-generator
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9002
  resources:
    limits:
      memory: 2000Mi
  jvmXmx: 1G
  renkuLogTimeout: 60 minutes
  reProvisioningInitialDelay: 2 minutes
  gitlab:
    rateLimit: 30/sec
  ## a demanded number of concurrent triples generation processes
  generationProcessesNumber: 4
  threadsNumber: 6
  dbEventLog:
    connectionPool: 2

webhookService:
  image:
    repository: renku/webhook-service
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      memory: 750Mi
  jvmXmx: 500m
  eventsSynchronization:
    initialDelay: 2 minutes
    interval: 30 minutes
  gitlab:
    rateLimit: 100/sec
  threadsNumber: 3
  dbEventLog:
    connectionPool: 2
  hookToken:
    ## A secret for signing request header tokens to be sent by GitLab with the Push Events
    ## Generated using: `openssl rand -hex 8|base64`
    secret:

knowledgeGraph:
  image:
    repository: renku/knowledge-graph
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      memory: 500Mi
  jvmXmx: 200m
  threadsNumber: 3
  services:
    renku:
      ## Renku knowledge-graph resources path e.g. `knowledge-graph` would assume
      ## Renku resource are available at: https://{global.renku.domain}/knowledge-graph
      resourcesPath: "/knowledge-graph"

sentry:
  enabled: false
  url: '' # Sentry url
  environmentName: '' # Environment name e.g. renkulabio
  sentryDsnRenkuPython: ''

nameOverride: ''
fullnameOverride: ''

persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 2Gi

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  paths: []
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
#  cpu: 100m
#  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
