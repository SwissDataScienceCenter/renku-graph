# Default values for renku-graph.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  ## Specify a secret that containes the certificate
  ## if you would like to use a custom CA. The key for the secret
  ## should have the .crt extension otherwise it is ignored. The
  ## keys across all secrets are mounted as files in one location so
  ## the keys across all secrets have to be unique.
  certificates:
    image:
      repository: renku/certificates
      tag: '0.0.1'
    customCAs: []
      # - secret:

webhookService:
  image:
    repository: renku/webhook-service
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    requests:
      memory: 256Mi
  jvmXmx: 128M
  gitlab:
    rateLimit: 100/sec
  hookToken:
    ## A secret for signing request header tokens to be sent by GitLab with the Push Events
    ## Generated using: `openssl rand -hex 8|base64`
    secret:

tokenRepository:
  image:
    repository: renku/token-repository
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9003
  resources:
    requests:
      memory: 256Mi
  jvmXmx: 128M
  gitlab:
    rateLimit: 50/sec
  connectionPool: 2
  tokenEncryption:
    ## A secret for signing access tokens stored in the database
    ## Generated using: `openssl rand -hex 8|base64`
    secret:

triplesGenerator:
  replicas: 1
  image:
    repository: renku/triples-generator
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9002
  resources:
    requests:
      memory: 2048Mi
      cpu: "1"
  jvmXmx: 1g
  reProvisioningRemovalBatchSize: 1000
  gitlab:
    rateLimit: 30/sec
  ## a demanded number of concurrent triples generation processes
  generationProcessesNumber: 2
  transformationProcessesNumber: 2
  # set this to a pip-installable renku-python version which will be installed on startup
  renkuPythonDevVersion:

knowledgeGraph:
  image:
    repository: renku/knowledge-graph
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  resources:
    requests:
      memory: 512Mi
  gitlab:
    rateLimit: 100/sec
  jvmXmx: 256M
  services:
    renku:
      ## Renku knowledge-graph resources path e.g. `knowledge-graph` would assume
      ## Renku resource are available at: https://{global.renku.domain}/knowledge-graph
      resourcesPath: "/knowledge-graph"

eventLog:
  image:
    repository: renku/event-log
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9005
  resources:
    requests:
      memory: 512Mi
  jvmXmx: 256M
  connectionPool: 10

commitEventService:
  image:
    repository: renku/commit-event-service
    tag: 'latest'
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9006
  resources:
    requests:
      memory: 384Mi
  jvmXmx: 128M
  gitlab:
    rateLimit: 10/sec

sentry:
  enabled: false
  url: '' # Sentry url
  environmentName: '' # Environment name e.g. renkulabio
  sentryDsnRenkuPython: ''

nameOverride: ''
fullnameOverride: ''

persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 2Gi

nodeSelector: {}

tolerations: []

affinity: {}
