apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "graph.fullname" . }}
  labels:
    app: {{ template "graph.name" . }}
    chart: {{ template "graph.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "graph.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "graph.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-webhook-service
          image: "{{ .Values.webhookService.image.repository }}:{{ .Values.webhookService.image.tag }}"
          imagePullPolicy: {{ .Values.webhookService.image.pullPolicy }}
          env:
            - name: HOOK_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "graph.fullname" . }}
                  key: webhookService-hookToken-secret
            - name: EVENT_LOG_POSTGRES_HOST
              value: "{{ template "postgresql.fullname" . }}:5432"
            - name: EVENT_LOG_POSTGRES_USER
              value: {{ .Values.global.graph.dbEventLog.postgresUser }}
            - name: EVENT_LOG_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "graph.fullname" . }}
                  key: dbEventLog-postgresPassword
            - name: TOKEN_REPOSITORY_BASE_URL
              value: "http://{{ template "token-repository.fullname" . }}:{{ .Values.tokenRepository.service.port }}"
            - name: GITLAB_BASE_URL
              value: {{ .Values.gitlab.url }}
            - name: SELF_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SELF_URL
              {{- if .Values.global.renku.domain }}
              value: {{ template "http" . }}://{{ .Values.global.renku.domain }}
              {{- else }}
              value: {{ printf "http://$(SELF_IP):9001" | quote }}
              {{- end }}
            - name: EVENTS_SYNCHRONIZATION_JOB_DELAY
              {{- if .Values.webhookService.eventsSynchronization.initialDelay }}
              value: {{ .Values.webhookService.eventsSynchronization.initialDelay }}
              {{- else }}
              value: 1 minute
              {{- end }}
            - name: EVENTS_SYNCHRONIZATION_JOB_INTERVAL
              {{- if .Values.webhookService.eventsSynchronization.interval }}
              value: {{ .Values.webhookService.eventsSynchronization.interval }}
              {{- else }}
              value: 1 hour
              {{- end }}
            - name: EVENT_LOG_POSTGRES_CONNECTION_POOL
              {{- if .Values.webhookService.dbEventLog.connectionPool }}
              value: {{ .Values.webhookService.dbEventLog.connectionPool }}
              {{- else }}
              value: 3
              {{- end }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.sentryDsnRenkuGraph }}?stacktrace.app.packages=&servername=webhook-service&environment={{ .Release.Namespace }}
            - name: THREADS_NUMBER
              {{- if .Values.webhookService.threadsNumber }}
              value: {{ .Values.webhookService.threadsNumber }}
              {{- else }}
              value: 5
              {{- end }}
            - name: JAVA_OPTS
              value: -Xmx200m -XX:+UseG1GC
          ports:
            - name: http-webhook-sv
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http-webhook-sv
          readinessProbe:
            httpGet:
              path: /ping
              port: http-webhook-sv
          resources:
{{ toYaml .Values.webhookService.resources | indent 12 }}
        - name: {{ .Chart.Name }}-triples-generator
          image: "{{ .Values.triplesGenerator.image.repository }}:{{ .Values.triplesGenerator.image.tag }}"
          imagePullPolicy: {{ .Values.triplesGenerator.image.pullPolicy }}
          env:
            - name: TOKEN_REPOSITORY_BASE_URL
              value: "http://{{ template "token-repository.fullname" . }}:{{ .Values.tokenRepository.service.port }}"
            - name: EVENT_LOG_POSTGRES_HOST
              value: "{{ template "postgresql.fullname" . }}:5432"
            - name: EVENT_LOG_POSTGRES_USER
              value: {{ .Values.global.graph.dbEventLog.postgresUser }}
            - name: EVENT_LOG_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "graph.fullname" . }}
                  key: dbEventLog-postgresPassword
            - name: EVENT_LOG_POSTGRES_CONNECTION_POOL
              {{- if .Values.triplesGenerator.dbEventLog.connectionPool }}
              value: {{ .Values.triplesGenerator.dbEventLog.connectionPool }}
              {{- else }}
              value: 3
              {{- end }}
            - name: GITLAB_BASE_URL
              value: {{ .Values.gitlab.url }}
            - name: JENA_DATASET_NAME
              {{- if .Values.global.graph.jena.dataset }}
              value: {{ .Values.global.graph.jena.dataset }}
              {{- else }}
              value: {{ .Release.Namespace }}
             {{- end }}
            - name: JENA_BASE_URL
              value: "http://{{ template "jena.fullname" . }}:{{ .Values.jena.service.port }}"
            - name: JENA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "jena.fullname" . }}
                  key: jena-admin-password
            - name: RENKU_LOG_TIMEOUT
              {{- if .Values.triplesGenerator.renkuLogTimeout }}
              value: {{ .Values.triplesGenerator.renkuLogTimeout }}
              {{- else }}
              value: 3 minutes
              {{- end }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.sentryDsnRenkuPython }}
            - name: GRAPH_SENTRY_DSN
              value: {{ .Values.sentry.sentryDsnRenkuGraph }}?stacktrace.app.packages=&servername=triples-generator&environment={{ .Release.Namespace }}
            - name: THREADS_NUMBER
              {{- if .Values.triplesGenerator.threadsNumber }}
              value: {{ .Values.triplesGenerator.threadsNumber }}
              {{- else }}
              value: 5
              {{- end }}
            - name: JAVA_OPTS
              value: -Xmx200m -XX:+UseG1GC
          ports:
            - name: http-triples-gn
              containerPort: 9002
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http-triples-gn
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: http-triples-gn
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.triplesGenerator.resources | indent 12 }}
        - name: {{ .Chart.Name }}-token-repository
          image: "{{ .Values.tokenRepository.image.repository }}:{{ .Values.tokenRepository.image.tag }}"
          imagePullPolicy: {{ .Values.tokenRepository.image.pullPolicy }}
          env:
            - name: TOKEN_ENCRYPTION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "graph.fullname" . }}
                  key: tokenRepository-tokenEncryption-secret
            - name: TOKEN_REPOSITORY_POSTGRES_HOST
              value: "{{ template "postgresql.fullname" . }}:5432"
            - name: TOKEN_REPOSITORY_POSTGRES_USER
              value: {{ .Values.global.graph.tokenRepository.postgresUser }}
            - name: TOKEN_REPOSITORY_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "graph.fullname" . }}
                  key: tokenRepository-postgresPassword
            - name: TOKEN_REPOSITORY_POSTGRES_CONNECTION_POOL
              {{- if .Values.tokenRepository.connectionPool }}
              value: {{ .Values.tokenRepository.connectionPool }}
              {{- else }}
              value: 5
              {{- end }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.sentryDsnRenkuGraph }}?stacktrace.app.packages=&servername=token-repository&environment={{ .Release.Namespace }}
            - name: JAVA_OPTS
              value: -Xmx100m -XX:+UseG1GC
          ports:
            - name: http-token-repo
              containerPort: 9003
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http-token-repo
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: http-token-repo
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.tokenRepository.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
