name: Test, publish and release
on:
  push:
    tags:
      - '*.*.*'
    branches:
      - master
      - 'hotfix-[0-9]+.[0-9]+**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
env:
  SBT_OPTS: "-XX:+CMSClassUnloadingEnabled -Xmx1G"
jobs:
  cleanup-previous-runs:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  test:
    runs-on: ubuntu-latest
    needs: [cleanup-previous-runs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Unit test
        run: sbt -Dsbt.color=always -Dsbt.supershell=false clean test
  acceptance-test:
    runs-on: ubuntu-latest
    needs: [cleanup-previous-runs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Acceptance tests
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project acceptance-tests" clean test
  formatter:
    runs-on: ubuntu-latest
    needs: [cleanup-previous-runs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Formatter
        run: sbt scalafmtCheck
  release:
    runs-on: ubuntu-latest
    needs: [ test, acceptance-test, formatter ]
    if: "!startsWith(github.event.head_commit.message, 'Setting version to') && github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/hotfix-')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.RENKU_CI_TOKEN }}
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Create release
        run: |
          git config --global user.name "Renku Bot"
          git config --global user.email "renku@datascience.ch"
          sbt "release skip-tests default-tag-exists-answer k with-defaults"
  publish:
    if: "startsWith(github.ref, 'refs/tags/')"
    env:
      DOCKER_LABEL: ${{ github.head_ref }}
      DOCKER_PUSH_LATEST: true
      DOCKER_REPOSITORY: renku/
      HELM_URL: https://storage.googleapis.com/kubernetes-helm
      HELM_TGZ: helm-v2.8.2-linux-amd64.tar.gz
    runs-on: ubuntu-latest
    needs: [ test, acceptance-test, formatter, release ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Intall dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "docker==4.2.2"
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: set up environment variables
        run: |
          echo ::set-env name=GIT_USER::"Renku Bot"
          echo ::set-env name=GIT_EMAIL::"renku@datascience.ch"
      - name: Build and push chart and images
        uses: SwissDataScienceCenter/renku/actions/publish-chart@master
        env:
          CHART_PATH: helm-chart/renku-graph
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Wait for chart to be available
        run: sleep 120
      - name: Update component version
        uses: SwissDataScienceCenter/renku/actions/update-component-version@master
        env:
          CHART_NAME: renku-graph
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
