name: Test & publish
on:
  push:
    tags:
      - '*.*.*'
env:
  SBT_OPTS: "-Xmx3G -XX:+UseG1GC"
jobs:
  cleanup-previous-runs:
    name: Cleanup previous runs
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.0
        env:
          GITHUB_TOKEN: "${{ secrets.RENKUBOT_GITHUB_TOKEN }}"
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [ cleanup-previous-runs ]
    steps:
      - uses: actions/checkout@v3
      - name: JDK set-up
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Unit test
        run: sbt -Dsbt.color=always -Dsbt.supershell=false clean test
  acceptance-tests:
    name: Graph acceptance tests
    runs-on: ubuntu-latest
    needs: [ cleanup-previous-runs ]
    steps:
      - uses: actions/checkout@v3
      - name: JDK set-up
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Acceptance tests
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project acceptance-tests" clean test
  formatter:
    name: Formatting check
    runs-on: ubuntu-latest
    needs: [ cleanup-previous-runs ]
    steps:
      - uses: actions/checkout@v3
      - name: JDK set-up
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Formatter
        run: sbt scalafmtCheck
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ unit-tests, acceptance-tests, formatter ]
    env:
      DOCKER_LABEL: ${{ github.head_ref }}
      DOCKER_PUSH_LATEST: true
      DOCKER_REPOSITORY: renku/
      HELM_URL: https://storage.googleapis.com/kubernetes-helm
      HELM_TGZ: helm-v2.17.0-linux-amd64.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: JDK set-up
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Set environment variables
        run: |
          echo "GIT_USER=Renku Bot" >> $GITHUB_ENV
          echo "GIT_EMAIL=renku@datascience.ch" >> $GITHUB_ENV
      - name: Build and push images and chart
        uses: SwissDataScienceCenter/renku-actions/publish-chartpress-images@v1.11.2
        env:
          DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
      - name: Update component version
        uses: SwissDataScienceCenter/renku-actions/update-component-version@v1.11.2
        env:
          COMPONENT_NAME: renku-graph
          GITHUB_TOKEN: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
