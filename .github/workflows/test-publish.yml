name: Test and publish
on:
  push:
    tags:
      - '*.*.*'
env:
  SBT_OPTS: "-XX:+CMSClassUnloadingEnabled -Xmx1G"
jobs:
  cleanup-previous-runs:
    name: ðŸ§¹ Cleanup previous runs
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  test:
    name: ðŸ§ª Unit Tests
    runs-on: ubuntu-latest
    needs: [cleanup-previous-runs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Unit test
        run: sbt -Dsbt.color=always -Dsbt.supershell=false clean test
  acceptance-test:
    name: ðŸ§ª Acceptance Tests
    runs-on: ubuntu-latest
    needs: [cleanup-previous-runs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Acceptance tests
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project acceptance-tests" clean test
  formatter:
    name: âœ… Formatter
    runs-on: ubuntu-latest
    needs: [cleanup-previous-runs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Formatter
        run: sbt scalafmtCheck
  publish:
    name: ðŸš€ Publish
    runs-on: ubuntu-latest
    needs: [test, acceptance-test, formatter]
    env:
      DOCKER_LABEL: ${{ github.head_ref }}
      DOCKER_PUSH_LATEST: true
      DOCKER_REPOSITORY: renku/
      HELM_URL: https://storage.googleapis.com/kubernetes-helm
      HELM_TGZ: helm-v2.8.2-linux-amd64.tar.gz
    steps:
      - uses: actions/checkout@v2
      - name: Build and push chart and images
        uses: SwissDataScienceCenter/renku/actions/publish-chart@master
        working-directory: ./helm-chart
        env:
          GIT_USER: "Renku Bot"
          GIT_EMAIL: renku@datascience.ch
          CHART_PATH: helm-chart/renku-graph
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Wait for chart to be available
        run: sleep 120
      - name: Update component version
        uses: SwissDataScienceCenter/renku/actions/update-component-version@master
        env:
          CHART_NAME: renku-graph
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
